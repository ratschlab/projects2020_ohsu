#!/bin/bash
#for i in {1..9}; do for j in {0..9}; do grep "batch_$i$j" tmp_completed_batches.txt > files_$i$j.txt; done ; done
# ----- SLURM Parameters -----
hours=72
cpus=1
mem=4G



# ----- ANALYSIS Parameters -----
sample_type='gtex'

if [ "${sample_type}" == 'gtex' ]; then
        base='/cluster/work/grlab/projects/projects2020_OHSU/peptides_generation/GTEX2019_eth/GTEX2019_c4dd02c_conf2_RFall_ref'
elif [ "${sample_type}" == 'ov' ]; then 
	base='/cluster/work/grlab/projects/projects2020_OHSU/peptides_generation/CANCER_eth/commit_c4dd02c_conf2_Frame_cap0_runs/TCGA_Ovarian_374'
elif [ "${sample_type}" == 'brca' ]; then 
    	base='/cluster/work/grlab/projects/projects2020_OHSU/peptides_generation/CANCER_eth/commit_c4dd02c_conf2_Frame_cap0_runs/TCGA_Breast_1102'
fi

for i in {1..9}; do for j in {0..9}; do 
	tag=$i$j
	suffix="compress_${tag}"
	job_name="c_${tag}"
        launch_script=send_compression_${tag}.sh
	# ----- Logging -----
	log_dir=${base}/lsf
	logging_base=${log_dir}/${suffix}_${cpus}p_${mem}
	err_file=${logging_base}.err
	log_file=${logging_base}.out

	# ---- Launch run ----
	echo "#!/bin/bash" > ${launch_script}
	echo "#SBATCH -o ${log_file}" >> ${launch_script}
	echo "#SBATCH -e ${err_file}" >> ${launch_script}
	echo "#SBATCH -J ${job_name}" >> ${launch_script}
	echo "#SBATCH --time=${hours}:00:00" >> ${launch_script}
	echo "#SBATCH --cpus-per-task=${cpus}" >> ${launch_script}
	echo "#SBATCH --mem=${mem}" >> ${launch_script}
	cmd="while read line; do for part in \${line}/*Expr*/* ; do new_name=\$(echo \$part | sed 's,\.gz,\.lz,g') ; cat \$part | gzip -d -c | plzip -6 -o \$new_name ; if [ -f \$new_name ] ; then echo \$part; chmod 440 \${new_name} ; chmod 660 \${part}; rm \${part} ;fi; done; done < files_${i}${j}.txt"
#echo "$cmd"
	echo $cmd >>  ${launch_script}

	echo "Output to ${log_file}"
	echo "Errors to ${err_file}"
	sbatch ${launch_script}
	squeue -u ${USER} | grep ${job_name}

done
done
